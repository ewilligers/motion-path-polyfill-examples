(function(){var internalScope={};"use strict";(function(){function parseAngleAsDegrees(angle){var angleUnitArray=/(deg|grad|rad|turn)$/.exec(angle);if(angleUnitArray===null){return null}var unit=angleUnitArray[0];var unitlessAngle=angle.substring(0,angle.length-unit.length);if(!isNumeric(unitlessAngle)||unitlessAngle===""){return null}unitlessAngle=Number(unitlessAngle);var conversionToDegrees={turn:360,grad:.9,rad:180/Math.PI,deg:1};return unitlessAngle*conversionToDegrees[unit]}function isNumeric(number){return!isNaN(number)}function flip(start,end){return{start:true,end:false,serialize:function(input){if(input){return start}return end}}}function isInArray(array,value){return array.indexOf(value)>=0}internalScope.parseAngleAsDegrees=parseAngleAsDegrees;internalScope.isNumeric=isNumeric;internalScope.flip=flip;internalScope.isInArray=isInArray})();"use strict";(function(){var isNumeric=internalScope.isNumeric;function rotateParse(input){var parseAngleAsDegrees=internalScope.parseAngleAsDegrees;if(input===undefined){return null}if(input==="none"){return[0,0,1,0]}var values=input.split(/\s+/);var numValues=values.length;if(numValues!==4&&numValues!==1){return undefined}var angle=parseAngleAsDegrees(values[numValues-1]);if(angle===null){return undefined}values[numValues-1]=angle;for(var i=0;i<numValues-1;i++){if(!isNumeric(values[i])){return undefined}values[i]=Number(values[i])}return values}function rotateMerge(start,end){return{start:start,end:end,serialize:function(input){return input.join(" ")+"deg"}}}internalScope.rotateParse=rotateParse;internalScope.rotateMerge=rotateMerge})();"use strict";(function(){var isNumeric=internalScope.isNumeric;function scaleParse(input){if(input===undefined){return null}else if(input==="none"){return[1,1,1]}var values=input.split(/\s+/);var numValues=values.length;if(numValues<1||numValues>3){return undefined}for(var i=0;i<numValues;i++){if(values[i]===""||!isNumeric(values[i])){return undefined}}values=values.map(Number);while(values.length<3){values.push(1)}return values}function scaleMerge(start,end){return{start:start,end:end,serialize:function(input){return input.join(" ")}}}internalScope.scaleParse=scaleParse;internalScope.scaleMerge=scaleMerge})();"use strict";(function(){var isNumeric=internalScope.isNumeric;function translateParse(input){if(input===undefined){return null}else if(input==="none"){return[0,0,0]}var inputValues=input.split(/\s+/);var numValues=inputValues.length;var valuesArray=[];if(numValues<1||numValues>3){return undefined}for(var i=0;i<numValues;i++){var elementLength=inputValues[i].length;var numberString=inputValues[i].substring(0,elementLength-2);if(!isNumeric(numberString)){return undefined}var unit=inputValues[i].substring(elementLength-2,elementLength);if(unit!=="px"){return undefined}valuesArray[i]=Number(numberString)}while(valuesArray.length<3){valuesArray.push(0)}return valuesArray}function translateMerge(start,end){return{start:start,end:end,serialize:function(valuesArray){var result=valuesArray.map(function(x){return x+"px"}).join(" ");return result}}}internalScope.translateParse=translateParse;internalScope.translateMerge=translateMerge})();"use strict";(function(){function basicShapePolygonParse(input,element){var argumentList=input.split(",");var coordinate=null;var x=null;var y=null;var previousX=0;var previousY=0;var path="";var parentProperties=null;for(var i=0;i<argumentList.length;i++){coordinate=argumentList[i].trim().split(/\s+/);if(coordinate.length!==2){return undefined}x=internalScope.offsetDistanceParse(coordinate[0]);y=internalScope.offsetDistanceParse(coordinate[1]);if(!x||!y){return undefined}if(x.unit==="%"||y.unit==="%"){parentProperties=element.offsetParent?element.offsetParent.getBoundingClientRect():null;if(!parentProperties){return null}if(x.unit==="%"){x.value=x.value*parentProperties.width/100}if(y.unit==="%"){y.value=y.value*parentProperties.height/100}}if(i===0){path+="m "+x.value+" "+y.value}else{path+=" l "+(x.value-previousX)+" "+(y.value-previousY)}previousX=x.value;previousY=y.value}path+=" z";return{type:"path",path:path}}function basicShapeCircleParse(input,element){var radius;var position=/at (.*?)$/.exec(input);if(position===null){position="0px 0px";if(input!==""){radius=input}}else{position=position[1].split(/\s+/);radius=/^(.*?) at/.exec(input);if(radius===null){radius="closest-side"}else{radius=radius[1]}}radius=Number(radius.substring(0,radius.length-2));var positionX=Number(position[0].substring(0,position[0].length-2));var positionY=Number(position[1].substring(0,position[1].length-2));var pathString="M "+positionX+" "+positionY+" m 0,"+-radius+" a "+radius+","+radius+" 0 0,1 "+radius+","+radius+" a "+radius+","+radius+" 0 1,1 "+-radius+","+-radius+" z";return{type:"path",path:pathString}}function basicShapeInsetParse(input,element){return null}function basicShapeEllipseParse(input,element){return null}function parseNone(input,element){if(input==="none"){return{type:null,angle:null,path:null}}}function parseRay(input,element){var isInArray=internalScope.isInArray;var parseAngleAsDegrees=internalScope.parseAngleAsDegrees;var ray=/^ray\((.*)\)$/.exec(input);if(ray===null){return undefined}var rayInput=ray[1].trim().split(/\s+/);if(rayInput.length>3){return undefined}var result={type:"ray",angle:null,path:null,contain:false,size:null};var validSizes=["closest-side","farthest-side","closest-corner","farthest-corner","sides"];for(var i=0;i<rayInput.length;i++){if(rayInput[i]==="contain"){if(result.contain){return undefined}result.contain=true}else if(isInArray(validSizes,rayInput[i])){if(result.size){return undefined}result.size=rayInput[i]}else{if(result.angle!==null){return undefined}var rayInputDegrees=parseAngleAsDegrees(rayInput[i]);if(rayInputDegrees===null){return undefined}result.angle=rayInputDegrees}}if(result.angle===null||result.size===null){return undefined}return result}function parsePath(input,element){var path=/^path\(['"](.*)['"]\)$/.exec(input);if(path===null){return undefined}var pathInput=path[1];return{type:"path",path:pathInput}}function parseShape(input,element){var isInArray=internalScope.isInArray;var shapeType=/^[^(]*/.exec(input);if(shapeType==null){return undefined}var basicShapes=["inset","circle","ellipse","polygon"];if(!isInArray(basicShapes,shapeType[0])){return undefined}var shapeArguments=/\(([^)]+)\)/.exec(input);if(shapeArguments===null){return undefined}var toParse=[basicShapePolygonParse,basicShapeCircleParse,basicShapeInsetParse,basicShapeEllipseParse];for(var i=0;i<toParse.length;i++){var result=toParse[i](shapeArguments[1],element);if(result){return result}}return undefined}function offsetPathParse(input,element){var toParse=[parseNone,parseRay,parsePath,parseShape];for(var i=0;i<toParse.length;i++){var result=toParse[i](input,element);if(result){return result}}return undefined}function offsetPathMerge(start,end){function serializeParsed(input){if(input.type==="ray"){var result="ray("+input.angle+"deg";if(input.size!==null){result+=" "+input.size}if(input.contain){result+=" contain"}result+=")";return result}if(input.type==="path"){return"path('"+input.path+"')"}if(input.type===null){return"none"}}if(start.type!=="ray"||end.type!=="ray"){return internalScope.flip(serializeParsed(start),serializeParsed(end))}if(start.size!==end.size||start.contain!==end.contain){return internalScope.flip(serializeParsed(start),serializeParsed(end))}return{start:start.angle,end:end.angle,serialize:function(input){var values={angle:input,contain:start.contain,size:start.size,type:start.type};return serializeParsed(values)}}}internalScope.offsetPathParse=offsetPathParse;internalScope.offsetPathMerge=offsetPathMerge})();"use strict";(function(){function offsetRotateParse(input){var parseAngleAsDegrees=internalScope.parseAngleAsDegrees;if(input===undefined){return null}var values=input.split(/\s+/);var numValues=values.length;if(numValues<1||numValues>2){return undefined}var autoProvided=false;var angleProvided=false;var angle=0;for(var i=0;i<numValues;i++){if(values[i]==="auto"){if(autoProvided){return undefined}autoProvided=true}else if(values[i]==="reverse"){if(autoProvided){return undefined}autoProvided=true;angle+=180}else{var angleDegrees=parseAngleAsDegrees(values[i]);if(angleDegrees===null||angleProvided){return undefined}angleProvided=true;angle+=angleDegrees}}return{angle:angle,auto:autoProvided}}function offsetRotateMerge(start,end){function serializeParsed(input){if(input.auto){return"auto "+input.angle+"deg"}return input.angle+"deg"}if(start.auto!==end.auto){return internalScope.flip(serializeParsed(start),serializeParsed(end))}return{start:start.angle,end:end.angle,serialize:function(angle){return serializeParsed({angle:angle,auto:start.auto})}}}internalScope.offsetRotateParse=offsetRotateParse;internalScope.offsetRotateMerge=offsetRotateMerge})();"use strict";(function(){var isNumeric=internalScope.isNumeric;function offsetDistanceParse(input){var distance=0;if(input===undefined){return undefined}if(input.endsWith("%")){distance=input.substring(0,input.length-1);if(!isNumeric(distance)||distance.length===0){return undefined}return{value:Number(distance),unit:"%"}}distance=input.substring(0,input.length-2);if(!input.endsWith("px")||!isNumeric(distance)||distance.length===0){return undefined}return{value:Number(distance),unit:"px"}}function offsetDistanceMerge(start,end){function serialize(input){return input+start.unit}if(start.unit!==end.unit){return internalScope.flip(start.value+start.unit,end.value+end.unit)}return{start:start.value,end:end.value,serialize:serialize}}internalScope.offsetDistanceParse=offsetDistanceParse;internalScope.offsetDistanceMerge=offsetDistanceMerge})();"use strict";(function(){function offsetPositionAnchorParse(input){if(input===undefined){return null}if(input==="auto"){return input}var values=input.trim().split(/\s+/);if(values.length===1){return parseOneValuePosition(values[0])}else if(values.length===2){return parseTwoValuePosition(values[0],values[1])}else if(values.length===4){return parseFourValuePosition(values[0],values[1],values[2],values[3])}else{return undefined}}function parseOneValuePosition(value){return parseTwoValuePosition(value,"center")}function parseTwoValuePosition(first,second){if(first==="top"||first==="bottom"||second==="left"||second==="right"){if(!internalScope.isInArray(["top","center","bottom"],first)||!internalScope.isInArray(["left","center","right"],second)){return undefined}var temp=first;first=second;second=temp}if(first==="left"){first="0%"}else if(first==="center"){first="50%"}else if(first==="right"){first="100%"}if(second==="top"){second="0%"}else if(second==="center"){second="50%"}else if(second==="bottom"){second="100%"}var leftValue=internalScope.offsetDistanceParse(first);var topValue=internalScope.offsetDistanceParse(second);if(typeof leftValue==="undefined"||typeof topValue==="undefined"){return undefined}return[leftValue,topValue]}function parseFourValuePosition(first,second,third,fourth){if(first==="top"||first==="bottom"){if(!internalScope.isInArray(["left","right"],third)){return undefined}return parseFourValuePosition(third,fourth,first,second)}var leftValue;if(first==="left"){leftValue=internalScope.offsetDistanceParse(second)}else if(first==="right"){leftValue=mirror(internalScope.offsetDistanceParse(second))}var topValue;if(third==="top"){topValue=internalScope.offsetDistanceParse(fourth)}else if(third==="bottom"){topValue=mirror(internalScope.offsetDistanceParse(fourth))}if(typeof leftValue==="undefined"||typeof topValue==="undefined"){return undefined}return[leftValue,topValue]}function mirror(distance){if(typeof distance==="undefined"){return undefined}if(distance.unit!=="%"){return undefined}return{value:100-distance.value,unit:"%"}}function offsetPositionAnchorMerge(start,end){function serializeNonInterpolable(input){if(input==="auto"){return input}return input[0].value+input[0].unit+" "+input[1].value+input[1].unit}function serialize(input){return input[0]+start[0].unit+" "+input[1]+start[1].unit}if(start==="auto"||end==="auto"){return internalScope.flip(serializeNonInterpolable(start),serializeNonInterpolable(end))}if(start[0].unit!==end[0].unit||start[1].unit!==end[1].unit){return internalScope.flip(serializeNonInterpolable(start),serializeNonInterpolable(end))}return{start:[start[0].value,start[1].value],end:[end[0].value,end[1].value],serialize:serialize}}internalScope.offsetPositionAnchorParse=offsetPositionAnchorParse;internalScope.offsetPositionAnchorMerge=offsetPositionAnchorMerge})();"use strict";(function(){function hypotenuseLength(a,b){return Math.sqrt(a*a+b*b)}function getDistanceToSides(distLeft,distTop,distRight,distBottom,angle){var sin=Math.sin(angle*Math.PI/180);var cos=Math.cos(angle*Math.PI/180);var distHorizontal;if(sin>=0){distHorizontal=distRight}else{distHorizontal=distLeft;sin=-sin}var distVertical;if(cos>=0){distVertical=distTop}else{distVertical=distBottom;cos=-cos}if(distVertical*sin<=distHorizontal*cos){return distVertical/cos}else{return distHorizontal/sin}}function getRayLength(size,containerWidth,containerHeight,offsetPosX,offsetPosY,angle){var distLeft=Math.abs(offsetPosX);var distTop=Math.abs(offsetPosY);var distRight=Math.abs(containerWidth-offsetPosX);var distBottom=Math.abs(containerHeight-offsetPosY);if(size==="sides"){if(offsetPosX<=0||offsetPosY<=0||offsetPosX>=containerWidth||offsetPosY>=containerHeight){return 0}return getDistanceToSides(distLeft,distTop,distRight,distBottom,angle)}else if(size==="closest-side"){return Math.min(distLeft,distTop,distRight,distBottom)}else if(size==="farthest-side"){return Math.max(distLeft,distTop,distRight,distBottom)}var distTopLeft=hypotenuseLength(distLeft,distTop);var distTopRightCorner=hypotenuseLength(distRight,distTop);var distBottomLeftCorner=hypotenuseLength(distLeft,distBottom);var distBottomRightCorner=hypotenuseLength(distRight,distBottom);if(size==="closest-corner"){return Math.min(distTopLeft,distTopRightCorner,distBottomLeftCorner,distBottomRightCorner)}else if(size==="farthest-corner"){return Math.max(distTopLeft,distTopRightCorner,distBottomLeftCorner,distBottomRightCorner)}}internalScope.getRayLength=getRayLength})();"use strict";(function(){function convertTranslate(input){var valuesArray=internalScope.translateParse(input);if(!valuesArray){return null}var result=valuesArray.map(function(x){return x+"px"});return"translate3d("+result.join(", ")+")"}function convertRotate(input){var valuesArray=internalScope.rotateParse(input);if(!valuesArray){return null}if(valuesArray.length>1){return"rotate3d("+valuesArray.join(", ")+"deg)"}return"rotate("+valuesArray.join(", ")+"deg)"}function convertScale(input){var valuesArray=internalScope.scaleParse(input);if(!valuesArray){return null}return"scale3d("+valuesArray.join(", ")+")"}var pathElement=document.createElementNS("http://www.w3.org/2000/svg","path");function convertPath(properties,positionAnchor,element){var offsetPath=internalScope.offsetPathParse(properties["offsetPath"],element);if(!offsetPath){return null}if(offsetPath.type==="path"){return convertPathString(properties)}if(offsetPath.type==="ray"){return convertRayString(properties,positionAnchor)}}function getOffsetDistanceLength(offsetDistance,pathLength,epsilon){if(offsetDistance.unit==="%"){return Number(offsetDistance.value)*pathLength/100+epsilon}else{return Number(offsetDistance.value)+epsilon}}function isClosedLoop(path){var pathInput=path.path.replace(/[,\s]+$/g,"");var lastPathInput=pathInput[pathInput.length-1];return lastPathInput==="z"||lastPathInput==="Z"}function getPathStringOffsetDistance(offsetPath,pathElement,offsetDistance,epsilon){var closedLoop=isClosedLoop(offsetPath);var pathLength=pathElement.getTotalLength();var offsetDistanceLength=getOffsetDistanceLength(offsetDistance,pathLength,epsilon);if(closedLoop){if(offsetDistanceLength<0){offsetDistanceLength=offsetDistanceLength%pathLength+pathLength}else{offsetDistanceLength=offsetDistanceLength%pathLength}}else if(offsetDistanceLength>pathLength){offsetDistanceLength=pathLength}return offsetDistanceLength}function roundToHundredth(number){return Math.round(number*100)/100}function convertPathString(properties){var offsetPath=internalScope.offsetPathParse(properties["offsetPath"]);var closedLoop=isClosedLoop(offsetPath);var offsetDistance=internalScope.offsetDistanceParse(properties["offsetDistance"]);if(offsetDistance===undefined){offsetDistance={value:0,unit:"px"}}pathElement.setAttribute("d",offsetPath.path);var totalPathLength=pathElement.getTotalLength();var currentOffsetDistance=getPathStringOffsetDistance(offsetPath,pathElement,offsetDistance,0);var epsilon=1e-4;var rotateFlip=false;if(!closedLoop&&currentOffsetDistance+epsilon>totalPathLength){epsilon*=-1;rotateFlip=true}var nextOffsetDistance=getPathStringOffsetDistance(offsetPath,pathElement,offsetDistance,epsilon);var currentPoint=pathElement.getPointAtLength(currentOffsetDistance);var nextPoint=pathElement.getPointAtLength(nextOffsetDistance);var deltaX=nextPoint.x-currentPoint.x;var deltaY=nextPoint.y-currentPoint.y;var rotation=Math.atan2(deltaY,deltaX)*180/Math.PI;if(rotateFlip){rotation+=180}return{deltaX:roundToHundredth(currentPoint.x),deltaY:roundToHundredth(currentPoint.y),rotation:roundToHundredth(rotation)}}function getContainedOffsetDistanceLength(offsetDistanceLength,properties,positionAnchor,rayLength){if(!positionAnchor){return 0}var epsilon=1e-4;var offsetPath=internalScope.offsetPathParse(properties["offsetPath"]);var parsedRotate=convertOffsetRotate(properties);var angle=parsedRotate.angle;if(!parsedRotate.auto){angle+=90-offsetPath.angle}var sin=Math.sin(angle*Math.PI/180);var cos=Math.cos(angle*Math.PI/180);function rotate(x,y){return[cos*x-sin*y,cos*y+sin*x]}var vertices=[rotate(-positionAnchor.anchorX,-positionAnchor.anchorY),rotate(positionAnchor.elementWidth-positionAnchor.anchorX,-positionAnchor.anchorY),rotate(positionAnchor.elementWidth-positionAnchor.anchorX,positionAnchor.elementHeight-positionAnchor.anchorY),rotate(-positionAnchor.anchorX,positionAnchor.elementHeight-positionAnchor.anchorY)].sort(function(a,b){return Math.abs(b[1])-Math.abs(a[1])});var lowerBound=-Infinity;var upperBound=Infinity;for(var i=0;i<4;++i){var x=vertices[i][0];var y=vertices[i][1];var discriminant=rayLength*rayLength-y*y;if(discriminant<0){lowerBound=Infinity;upperBound=-Infinity}else{lowerBound=Math.max(lowerBound,-x-Math.sqrt(discriminant));upperBound=Math.min(upperBound,-x+Math.sqrt(discriminant))}}if(lowerBound<=upperBound){return Math.max(lowerBound,Math.min(upperBound,offsetDistanceLength))}rayLength=Math.abs(vertices[0][1]);offsetDistanceLength=-vertices[0][0];for(i=0;i<3;++i){for(var j=i+1;j<4;++j){var xi=vertices[i][0];var yi=vertices[i][1];var xj=vertices[j][0];var yj=vertices[j][1];var xd=xi-xj;if(xd*xd+yj*yj<=yi*yi+epsilon){continue}var candidateOffsetDistance=(xj*xj+yj*yj-xi*xi-yi*yi)/2/xd;xi+=candidateOffsetDistance;xj+=candidateOffsetDistance;var candidateRayLength=Math.sqrt(xi*xi+yi*yi);if(rayLength>=candidateRayLength){continue}rayLength=candidateRayLength;offsetDistanceLength=candidateOffsetDistance}}return offsetDistanceLength}function convertRayString(properties,positionAnchor){var offsetPath=internalScope.offsetPathParse(properties["offsetPath"]);var rayLength=0;if(positionAnchor){rayLength=internalScope.getRayLength(offsetPath.size,positionAnchor.containerWidth,positionAnchor.containerHeight,positionAnchor.offsetPosX,positionAnchor.offsetPosY,offsetPath.angle)}var offsetDistance=internalScope.offsetDistanceParse(properties["offsetDistance"]);if(offsetDistance===undefined){offsetDistance={value:0,unit:"px"}}var offsetDistanceLength=getOffsetDistanceLength(offsetDistance,rayLength,0);if(offsetPath.contain){offsetDistanceLength=getContainedOffsetDistanceLength(offsetDistanceLength,properties,positionAnchor,rayLength)}var deltaX=Math.sin(offsetPath.angle*Math.PI/180)*offsetDistanceLength;var deltaY=-1*Math.cos(offsetPath.angle*Math.PI/180)*offsetDistanceLength;return{deltaX:roundToHundredth(deltaX),deltaY:roundToHundredth(deltaY),rotation:offsetPath.angle-90}}function convertOffsetAnchorPosition(properties,element){if(!element){return null}var position="auto";if("offsetPosition"in properties){position=internalScope.offsetPositionAnchorParse(properties["offsetPosition"]);if(!position){position="auto"}}var anchor="auto";if("offsetAnchor"in properties){anchor=internalScope.offsetPositionAnchorParse(properties["offsetAnchor"]);if(!anchor){anchor="auto"}}var transformOrigin=window.getComputedStyle(element).transformOrigin;transformOrigin=transformOrigin.split(/\s+/).map(internalScope.offsetDistanceParse);if(anchor==="auto"){if(position==="auto"||properties["offsetPath"]&&properties["offsetPath"]!=="none"){anchor=transformOrigin}else{anchor=position}}var savedTransform=element.style._style.transform;element.style._style.transform="none";var offsetLeft=element.offsetLeft;var offsetTop=element.offsetTop;var elementProperties=element.getBoundingClientRect();var parentProperties=element.offsetParent?element.offsetParent.getBoundingClientRect():null;element.style._style.transform=savedTransform;if(!parentProperties){return null}var anchorPosX=anchor[0].value;var anchorPosY=anchor[1].value;if(anchor[0].unit==="%"){anchorPosX=anchorPosX*elementProperties.width/100}if(anchor[1].unit==="%"){anchorPosY=anchorPosY*elementProperties.height/100}var offsetPosX;var offsetPosY;if(position==="auto"){offsetPosX=offsetLeft+anchorPosX;offsetPosY=offsetTop+anchorPosY}else{offsetPosX=position[0].value;offsetPosY=position[1].value;if(position[0].unit==="%"){offsetPosX=offsetPosX*parentProperties.width/100}if(position[1].unit==="%"){offsetPosY=offsetPosY*parentProperties.height/100}}return{deltaX:offsetPosX-anchorPosX-offsetLeft,deltaY:offsetPosY-anchorPosY-offsetTop,anchorX:anchorPosX,anchorY:anchorPosY,transformOriginX:transformOrigin[0].value,transformOriginY:transformOrigin[1].value,offsetPosX:offsetPosX,offsetPosY:offsetPosY,elementWidth:elementProperties.width,elementHeight:elementProperties.height,containerWidth:parentProperties.width,containerHeight:parentProperties.height}}function convertOffsetRotate(properties,element){var value=null;if("offsetRotate"in properties){value=internalScope.offsetRotateParse(properties["offsetRotate"])}if(!value){return{angle:0,auto:true}}return value}function convertOffsetToTransform(properties,element){var positionAnchor=convertOffsetAnchorPosition(properties,element);var pathTransform=convertPath(properties,positionAnchor,element);var parsedRotate=convertOffsetRotate(properties);var rotation=parsedRotate.angle;var path=internalScope.offsetPathParse(properties["offsetPath"]);if(!pathTransform&&!("offsetPosition"in properties)){return null}if(!pathTransform){pathTransform={deltaX:0,deltaY:0,rotation:0}}if(parsedRotate.auto){rotation+=pathTransform.rotation}if(!positionAnchor){positionAnchor={deltaX:0,deltaY:0}}var anchorX=positionAnchor.anchorX;var anchorY=positionAnchor.anchorY;var transformOriginX=positionAnchor.transformOriginX;var transformOriginY=positionAnchor.transformOriginY;var transform="translate3d("+(pathTransform.deltaX+positionAnchor.deltaX)+"px, "+(pathTransform.deltaY+positionAnchor.deltaY)+"px, 0px)";if(path!==undefined){if(rotation!==undefined&&rotation!==0){if(anchorX!==transformOriginX&&anchorY!==transformOriginY){var beforeShiftX=anchorX-transformOriginX;var beforeShiftY=anchorY-transformOriginY;var beforeShiftStr="translate3d("+beforeShiftX+"px, "+beforeShiftY+"px, 0px)";var afterShiftX=-1*beforeShiftX;var afterShiftY=-1*beforeShiftY;var afterShiftStr="translate3d("+afterShiftX+"px, "+afterShiftY+"px, 0px)";transform+=" "+beforeShiftStr+" rotate("+rotation+"deg) "+afterShiftStr;return transform}transform+=" rotate("+rotation+"deg)"}}return transform}function toTransform(properties,element){return[convertTranslate(properties.translate),convertRotate(properties.rotate),convertScale(properties.scale),convertOffsetToTransform(properties,element)].filter(function(result){return result!==null}).join(" ")||"none"}internalScope.toTransform=toTransform})();"use strict";(function(){WebAnimationsPolyfillExtension.register({name:"transforms",properties:{translate:{parse:internalScope.translateParse,merge:internalScope.translateMerge},scale:{parse:internalScope.scaleParse,merge:internalScope.scaleMerge},rotate:{parse:internalScope.rotateParse,merge:internalScope.rotateMerge},offsetRotate:{parse:internalScope.offsetRotateParse,merge:internalScope.offsetRotateMerge},offsetDistance:{parse:internalScope.offsetDistanceParse,merge:internalScope.offsetDistanceMerge},offsetPath:{parse:internalScope.offsetPathParse,merge:internalScope.offsetPathMerge},offsetAnchor:{parse:internalScope.offsetPositionAnchorParse,merge:internalScope.offsetPositionAnchorMerge},offsetPosition:{parse:internalScope.offsetPositionAnchorParse,merge:internalScope.offsetPositionAnchorMerge}},applyHook:{callback:function(values,element){var transformString=internalScope.toTransform(values,element);var result={transform:transformString+" "+values.transform,scale:"1 1 1",rotate:"0deg",translate:"0px",offsetPath:"none",offsetDistance:"0px",offsetRotate:"auto",offsetPosition:"auto",offsetAnchor:"auto"};if(internalScope.webAnimationsJsTesting){result["scaleForTesting"]=values.scale;result["rotateForTesting"]=values.rotate;result["translateForTesting"]=values.translate;result["offsetPathForTesting"]=values.offsetPath;result["offsetDistanceForTesting"]=values.offsetDistance;result["offsetRotateForTesting"]=values.offsetRotate;result["offsetPositionForTesting"]=values.offsetPosition;result["offsetAnchorForTesting"]=values.offsetAnchor}return result},watchedProperties:["scale","rotate","translate","transform","offsetDistance","offsetPath","offsetPosition","offsetAnchor","offsetRotate"]}})})()})();
